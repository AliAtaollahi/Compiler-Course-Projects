ADD_ASSIGN : '+=';
AND : '&&';
ASK : 'Ask';
ASSIGN : '=';
BID : 'Bid';
BITWISE_AND : '&';
BITWISE_LEFT_SHIFT : '<<';
BITWISE_NOT : '~';
BITWISE_OR : '|';
BITWISE_RIGHT_SHIFT : '>>';
BITWISE_XOR : '^';
BLOCK_COMMENT: '/*' .*? '*/' -> skip;
BOOL : 'bool';
BOOLEAN_VAL : TRUE | FALSE;
BREAK : 'break';
BUY : 'BUY';
CANDLE : 'Candle';
CATCH : 'catch';
CLOSE : 'Close';
COMMA : ',';
CONNECT : 'Connect';
CONTINUE : 'continue';
DECREMENT : '--';
DIGITS : 'Digits';
DIVIDE : '/';
DIVIDE_ASSIGN : '/=';
DOT : '.';
DOUBLE : 'double';
ELSE : 'else';
EQUALS : '==';
EXCEPTION : 'Exception';
FALSE : 'false';
FLOAT : 'float';
FLOAT_VAL : INT_VAL '.' [0-9]+;
FOR : 'for';
GET_CANDLE : 'GetCandle';
GREATER_THAN : '>';
HIGH : 'High';
IDENTIFIER: [a-zA-Z_][a-zA-Z0-9_]*;
IF : 'if';
INCREMENT : '++';
INT : 'int';
INT_VAL : ZERO | NON_ZERO_INT_VAL;
LBRACE : '{';
LBRACKET: '[';
LESS_THAN : '<';
LINE_COMMENT: '//' ~ [\r\n]* -> skip;
LOW : 'Low';
LPAR: '(';
MAIN : 'Main';
MINUS : '-';
MODULO : '%';
MODULO_ASSIGN : '%=';
MULTIPLY : '*';
MULTIPLY_ASSIGN : '*=';
NEW_LINE: ('\r' '\n'? | '\n') -> skip;
NON_ZERO_INT_VAL : [1-9][0-9]*;
NOT : '!';
NOT_EQUALS : '!=';
OBSERVE : 'Observe';
ON_INIT : 'OnInit';
ON_START : 'OnStart';
OPEN : 'Open';
OR : '||';
ORDER : 'Order';
PARALLEL : 'parallel';
PLUS : '+';
PRE_ORDER : 'preorder';
PRINT : 'Print';
RBRACE : '}';
RBRACKET: ']';
REFRESH_RATE : 'RefreshRate';
RETURN : 'return';
RPAR: ')';
SCHEDULE : '@schedule';
SELL : 'SELL';
SEMICOLON : ';';
SHARED : 'shared';
STATIC : 'static';
STRING : 'string';
STRING_VAL: '"' ~["]* '"';
SUBTRACT_ASSIGN : '-=';
TERMINATE : 'Terminate';
TEXT : 'Text';
THROW : 'throw';
TIME : 'Time';
TRADE : 'Trade';
TRUE : 'true';
TRY : 'try';
TYPE : 'Type';
VOID : 'void';
VOLUME : 'Volume';
WHILE : 'while';
WHITE_SPACE: [ \t]+ -> skip;
ZERO : '0';